# GitHub Action for Yii Framework with PostgreSQL
name: Testing Yii2 with PostgreSQL
on: [push, pull_request]
jobs:
  yii:
    name: Yii2 (PHP ${{ matrix.php-versions }})
    runs-on: ubuntu-latest
    # Docker Hub image that `postgres-job` executes in
    container: node:latest
    env:
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      TEST_DB_USERNAME: postgres
      TEST_DB_PASSWORD: postgres
      DB_CHARSET: utf8

    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.1']
    steps:
      - name: Install PostgreSQL client
        run: |
          apt-get update
          apt-get install --yes postgresql-client     
          
      - name: Checkout
        uses: actions/checkout@v3
             
      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
                
      - name: Set Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      # Docs: https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl, gd, imagick, zip, dom, pgsql, pdo, pdo_pgsql
          coverage: xdebug
          tools: cs2pr, phpcs

      - name: Get composer cache directory
        id: composer-cache
        working-directory: ./project/src/
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        working-directory: ./project/src/
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        working-directory: ./project/src/
        run: |
          php -r "file_exists('.env') || copy('.env.dist', '.env');"

      - name: Run Tests
        working-directory: ./project/src/
        run: |
          vendor/bin/php-coveralls -v
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Run phpcs
        working-directory: ./project/src/
        run: phpcs --standard=PSR12 -q --report=checkstyle ./controllers/ | cs2pr

  all_tests:
    name: Tests For All Versions Successful
    needs: [yii]
    runs-on: ubuntu-latest
    steps:
      - name: Return Status
        run: true
